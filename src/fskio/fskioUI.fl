# data file for the Fltk User Interface Designer (fluid)
version 1.0308
i18n_type 1
i18n_include "gettext.h"
i18n_function _
header_name {.h}
code_name {.cxx}
decl {\#include "fsk.h"} {private local
}

decl {\#include "fsklog.h"} {private local
}

decl {\#include <FL/Fl_Double_Window.H>} {public global
}

decl {Fl_Double_Window *fsklog_viewer;} {public local
}

Function {fskio_window()} {open
} {
  Fl_Window {} {
    label {FSK keying} open
    xywh {610 38 670 130} type Double resizable
    code0 {\#include "status.h"}
    code1 {\#include "fsk.h"}
    code2 {\#include "ValueSlider.h"} visible
  } {
    Fl_Input FSK_txt_to_send {
      callback {FSK_control_function_keys();}
      xywh {2 2 666 68} type Multiline align 16 when 1 resizable
      class Fl_Input2
    }
    Fl_Group {} {open
      xywh {0 70 670 60}
    } {
      Fl_Button btn_fskio_config {
        label Config
        callback {FSK_open_config();}
        tooltip {Open FSK configuration dialog} xywh {390 73 60 22}
      }
      Fl_Button btn_fskio_clear {
        label Clear
        callback {FSK_clear_text();}
        tooltip {Clear transmit text} xywh {473 73 60 22}
      }
      Fl_Light_Button btn_fskioSEND {
        label {Xmt / Rcv}
        callback {FSK_send_text(o->value());}
        tooltip {Send / Pause sending characters} xywh {557 73 105 22}
      }
      Fl_Group {} {
        xywh {2 98 220 30} box ENGRAVED_BOX
      } {
        Fl_Button {FSK_btn_msg[0]} {
          label {F 1}
          callback {FSK_exec_msg(0);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {5 102 50 22}
        }
        Fl_Button {FSK_btn_msg[1]} {
          label {F 2}
          callback {FSK_exec_msg(1);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {59 102 50 22}
        }
        Fl_Button {FSK_btn_msg[2]} {
          label {F 3}
          callback {FSK_exec_msg(2);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {113 102 50 22}
        }
        Fl_Button {FSK_btn_msg[3]} {
          label {F 4}
          callback {FSK_exec_msg(3);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {168 102 50 22}
        }
      }
      Fl_Group {} {
        xywh {225 98 220 30} box ENGRAVED_BOX
      } {
        Fl_Button {FSK_btn_msg[4]} {
          label {F 5}
          callback {FSK_exec_msg(4);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {229 102 50 22}
        }
        Fl_Button {FSK_btn_msg[5]} {
          label {F 6}
          callback {FSK_exec_msg(5);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {283 102 50 22}
        }
        Fl_Button {FSK_btn_msg[6]} {
          label {F 7}
          callback {FSK_exec_msg(6);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {337 102 50 22}
        }
        Fl_Button {FSK_btn_msg[7]} {
          label {F 8}
          callback {FSK_exec_msg(7);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {391 102 50 22}
        }
      }
      Fl_Group {} {
        xywh {448 98 220 30} box ENGRAVED_BOX
      } {
        Fl_Button {FSK_btn_msg[8]} {
          label {F 9}
          callback {FSK_exec_msg(8);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {451 102 50 22}
        }
        Fl_Button {FSK_btn_msg[9]} {
          label {F 10}
          callback {FSK_exec_msg(9);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {505 102 50 22}
        }
        Fl_Button {FSK_btn_msg[10]} {
          label {F 11}
          callback {FSK_exec_msg(10);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {559 102 50 22}
        }
        Fl_Button {FSK_btn_msg[11]} {
          label {F 12}
          callback {FSK_exec_msg(11);}
          tooltip {Action - Function Key Left click
Edit - Control left click} xywh {614 102 50 22}
        }
      }
    }
  }
}

Function {FSK_make_message_editor()} {open
} {
  Fl_Window {} {
    label {FSK Message Editor} open
    xywh {613 338 670 344} type Double hide resizable
  } {
    Fl_Tabs {} {open
      xywh {0 0 570 345} align 17
    } {
      Fl_Group {} {
        label {F1-F4} open
        xywh {0 25 570 320} hide
      } {
        Fl_Box {} {
          label Label
          xywh {22 30 84 20}
        }
        Fl_Box {} {
          label {Message Text}
          xywh {211 30 223 20}
        }
        Fl_Input {FSK_edit_label[0]} {
          label F1
          callback {FSK_label_cb(1);}
          xywh {5 74 80 22} align 5
          code0 {\#include "flinput2.h"}
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[0]} {
          callback {FSK_msg_cb(1);}
          xywh {90 55 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[1]} {
          label F2
          callback {FSK_label_cb(2);}
          xywh {5 144 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[1]} {
          callback {FSK_msg_cb(2);}
          xywh {90 125 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[2]} {
          label F3
          callback {FSK_label_cb(3);}
          xywh {5 214 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[2]} {
          callback {FSK_msg_cb(3);}
          xywh {90 195 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[3]} {
          label F4
          callback {FSK_label_cb(4);}
          xywh {5 284 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[3]} {
          callback {FSK_msg_cb(4);}
          xywh {90 265 475 65} type Multiline
          class Fl_Input2
        }
      }
      Fl_Group {} {
        label {F5-f8} open
        xywh {0 25 570 320} hide
      } {
        Fl_Box {} {
          label Label
          xywh {24 30 90 20}
        }
        Fl_Box {} {
          label {Message Text}
          xywh {227 30 240 20}
        }
        Fl_Input {FSK_edit_label[4]} {
          label F5
          callback {FSK_label_cb(5);}
          xywh {5 74 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[4]} {
          callback {FSK_msg_cb(5);}
          xywh {90 55 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[5]} {
          label F6
          callback {FSK_label_cb(6);}
          xywh {5 144 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[5]} {
          callback {FSK_msg_cb(6);}
          xywh {90 125 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[6]} {
          label F7
          callback {FSK_label_cb(7);}
          xywh {5 214 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[6]} {
          callback {FSK_msg_cb(7);}
          xywh {90 195 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[7]} {
          label F8
          callback {FSK_label_cb(8);}
          xywh {5 284 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[7]} {
          callback {FSK_msg_cb(8);}
          xywh {90 265 475 65} type Multiline
          class Fl_Input2
        }
      }
      Fl_Group {} {
        label {F9-F12} open
        xywh {0 25 570 320}
      } {
        Fl_Box {} {
          label Label
          xywh {24 30 90 20}
        }
        Fl_Box {} {
          label {Message Text}
          xywh {227 30 240 20}
        }
        Fl_Input {FSK_edit_label[8]} {
          label F9
          callback {FSK_label_cb(9);}
          xywh {5 73 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[8]} {
          callback {FSK_msg_cb(9);}
          xywh {90 55 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[9]} {
          label F10
          callback {FSK_label_cb(10);}
          xywh {5 143 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[9]} {
          callback {FSK_msg_cb(10);}
          xywh {90 125 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[10]} {
          label F11
          callback {FSK_label_cb(11);}
          xywh {5 213 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[10]} {
          callback {FSK_msg_cb(11);}
          xywh {90 195 475 65} type Multiline
          class Fl_Input2
        }
        Fl_Input {FSK_edit_label[11]} {
          label F12
          callback {FSK_label_cb(12);}
          xywh {5 283 80 22} align 5
          class Fl_Input2
        }
        Fl_Input {FSK_edit_msg[11]} {
          callback {FSK_msg_cb(12);}
          xywh {90 265 475 65} type Multiline
          class Fl_Input2
        }
      }
    }
    Fl_Group {} {open
      xywh {575 27 90 43} box ENGRAVED_FRAME
    } {
      Fl_Box {} {
        label {'[' Send}
        xywh {579 29 82 20}
      }
      Fl_Box {} {
        label {']' Recv}
        xywh {579 49 82 20}
      }
    }
    Fl_Button FSK_btn_cancel_edit {
      label Cancel
      callback {FSK_cancel_edit();}
      tooltip {Exit editor, discard changes} xywh {575 88 90 22}
    }
    Fl_Button FSK_btn_apply_edit {
      label Apply
      callback {FSK_apply_edit();}
      tooltip {Apply current changes to function keys} xywh {575 114 90 22}
    }
    Fl_Button FSK_btn_FSK_done_edit {
      label Close
      callback {FSK_done_edit();}
      tooltip {Apply changes and close editor} xywh {575 141 90 22}
    }
  }
}

Function {fskio_config_dialog()} {open
} {
  Fl_Window {} {
    label {FSK Configuration} open
    xywh {610 200 670 100} type Double visible
  } {
    Fl_Group {} {open
      xywh {2 3 666 100} box ENGRAVED_FRAME
    } {
      Fl_Group select_fskioPORT {
        label {Ser. Port}
        callback {progStatus.FSK_PORT = o->value();} open
        tooltip {FSKIO serial port} xywh {73 73 496 23} box DOWN_BOX color 53 align 4
        code0 {\#include "combo.h"}
        code1 {o->value(progStatus.FSK_PORT.c_str());}
        class Fl_ComboBox
      } {}
      Fl_Light_Button btn_fskioCONNECT {
        label Connect
        callback {if (o->value() == 0) {
  FSK_close_port();
  btn_fskioCAT->activate();
  btn_fskioAUX->activate();
  btn_fskioSEP->activate();
  progStatus.FSK_CONNECTED = 0;
}
else if (!FSK_open_port()) {
  o->value(0);
  btn_fskioCAT->activate();
  btn_fskioAUX->activate();
  btn_fskioSEP->activate();
  progStatus.FSK_CONNECTED = 0;
} else {
  btn_fskioCAT->value(0); btn_fskioCAT->deactivate();
  btn_fskioAUX->value(0); btn_fskioAUX->deactivate();
  btn_fskioSEP->value(0); btn_fskioSEP->deactivate();
  progStatus.FSK_CONNECTED = 1;
}
FSK_open_port();
progStatus.FSK_SHARED = FSK_USES_FSK;}
        xywh {578 73 80 23}
        code0 {o->value(progStatus.FSK_CONNECTED);}
      }
      Fl_Check_Button btn_fskioCAT {
        label {Use CAT}
        callback {if (o->value()) {
  progStatus.FSK_SHARED = FSK_USES_CAT;
  btn_fskioAUX->value(0); btn_fskioAUX->deactivate();
  btn_fskioSEP->value(0); btn_fskioSEP->deactivate();
  btn_fskioCONNECT->value(0); btn_fskioCONNECT->deactivate();
  btn_fskioSHARED->value(0); btn_fskioSHARED->deactivate();
  select_fskioPORT->value("NONE"); select_fskioPORT->deactivate();
}else {
  progStatus.FSK_SHARED = FSK_USES_FSK;
  btn_fskioCONNECT->activate();
  btn_fskioAUX->activate();
  btn_fskioCAT->activate();
  btn_fskioSEP->activate();
  btn_fskioSHARED->activate();
  select_fskioPORT->activate();
}}
        tooltip {Use DTR/RTS on CAT serial port} xywh {87 15 23 15} down_box DOWN_BOX align 4
        code0 {o->value(progStatus.FSK_SHARED == FSK_USES_CAT);}
      }
      Fl_Check_Button btn_fskioAUX {
        label {Use AUX}
        callback {if (o->value()) {
  progStatus.FSK_SHARED = FSK_USES_AUX;
  btn_fskioCAT->value(0); btn_fskioCAT->deactivate();
  btn_fskioSEP->value(0); btn_fskioSEP->deactivate();
  btn_fskioCONNECT->value(0); btn_fskioCONNECT->deactivate();
  btn_fskioSHARED->value(0); btn_fskioSHARED->deactivate();
  select_fskioPORT->value("NONE"); select_fskioPORT->deactivate();
}else {
  progStatus.FSK_SHARED = FSK_USES_FSK;
  btn_fskioCONNECT->activate();
  btn_fskioAUX->activate();
  btn_fskioCAT->activate();
  btn_fskioSEP->activate();
  btn_fskioSHARED->activate();
  select_fskioPORT->activate();
}}
        tooltip {Use DTR/RTS on Auxiliary serial port} xywh {88 46 23 15} down_box DOWN_BOX align 4
        code0 {o->value(progStatus.FSK_SHARED == FSK_USES_AUX);}
      }
      Fl_Check_Button btn_fskioSEP {
        label {Use SEP}
        callback {if (o->value()) {
  progStatus.FSK_SHARED = FSK_USES_SEP;
  btn_fskioAUX->value(0); btn_fskioAUX->deactivate();
  btn_fskioCAT->value(0); btn_fskioCAT->deactivate();
  btn_fskioCONNECT->value(0); btn_fskioCONNECT->deactivate();
  btn_fskioSHARED->value(0); btn_fskioSHARED->deactivate();
  select_fskioPORT->value("NONE"); select_fskioPORT->deactivate();
}else {
  progStatus.FSK_SHARED = FSK_USES_FSK;
  btn_fskioCONNECT->activate();
  btn_fskioAUX->activate();
  btn_fskioCAT->activate();
  btn_fskioSEP->activate();
  btn_fskioSHARED->activate();
  select_fskioPORT->activate();
}}
        tooltip {Use DTR/RTS Separate serial port} xywh {212 15 23 15} down_box DOWN_BOX align 4
        code0 {o->value(progStatus.FSK_SHARED == FSK_USES_SEP);}
      }
      Fl_Check_Button btn_fskioSHARED {
        label {CWIO shared}
        callback {if (o->value()) {
  progStatus.FSK_SHARED = FSK_USES_CWIO;
  btn_fskioAUX->value(0); btn_fskioAUX->deactivate();
  btn_fskioCAT->value(0); btn_fskioCAT->deactivate();
  btn_fskioSEP->value(0); btn_fskioSEP->deactivate();
  btn_fskioCONNECT->value(0); btn_fskioCONNECT->deactivate();
  select_fskioPORT->value("NONE"); select_fskioPORT->deactivate();
}else {
  progStatus.FSK_SHARED = FSK_USES_FSK;
  btn_fskioCONNECT->activate();
  btn_fskioAUX->activate();
  btn_fskioCAT->activate();
  btn_fskioSEP->activate();
  btn_fskioSHARED->activate();
  select_fskioPORT->activate();
}}
        tooltip {Use DTR/RTS fskio shared port} xywh {212 46 23 15} down_box DOWN_BOX align 4
        code0 {o->value(progStatus.FSK_SHARED == FSK_USES_CWIO);}
      }
      Fl_Check_Button btn_fskioINVERTED {
        label Inverted
        callback {progStatus.FSK_INVERTED = o->value();}
        tooltip {DTR/RTS signaling is inverted
(-) keying} xywh {339 15 23 15} down_box DOWN_BOX align 4
        code0 {o->value(progStatus.FSK_INVERTED);}
      }
      Fl_Check_Button btn_fskioSTOPBITS {
        label {1.5 stop bits}
        callback {progStatus.FSK_STOPBITS = o->value();}
        tooltip {Enabled - 1.5 stop bits
Disable - 2 stop bits} xywh {339 46 23 15} down_box DOWN_BOX align 4
        code0 {o->value(progStatus.FSK_STOPBITS);}
      }
      Fl_Group listbox_fskioKEYLINE {
        label {FSK Keyline}
        callback {progStatus.FSK_KEYLINE = o->index();}
        tooltip {Select either DTR or RTS for keyline} xywh {593 41 65 24} box DOWN_BOX color 7 align 4
        code0 {\#include "combo.h"}
        code1 {o->add("None|RTS|DTR");}
        code2 {o->index(progStatus.FSK_KEYLINE);}
        class Fl_ListBox
      } {}
      Fl_Spinner cntr_fskioPTT {
        label {PTT delay}
        callback {progStatus.FSK_PTT = o->value();}
        tooltip {PTT delay before keydown
0 = Break-in} xywh {608 10 50 25} minimum 0 value 0
        code0 {o->value(progStatus.FSK_PTT);}
      }
      Fl_Counter fsk_idles {
        label {Start Idles}
        callback {progStatus.fsk_idles = o->value();}
        tooltip {Transmit \# <LTRS> after PTT on} xywh {400 11 80 21} type Simple minimum 0 maximum 20 step 1
        code0 {o->value(progStatus.fsk_idles);}
      }
    }
  }
}

Function {new_fsklogbook_dialog()} {open
} {
  Fl_Window {} {
    label {Flrig RTTY Log} open
    xywh {610 351 670 284} type Double visible
  } {
    Fl_Menu_Bar FSKlog_menubar {open selected
      xywh {0 0 670 20}
    } {
      Submenu FSKlog_menu {
        label Files open
        xywh {0 0 70 21}
      } {
        MenuItem fsklog_fsk_menu_open {
          label Open
          callback {fsklog_open();}
          xywh {0 0 36 21}
        }
        MenuItem fsklog_fsk_menu_new {
          label New
          callback {fsklog_new();}
          xywh {0 0 36 21}
        }
        MenuItem fsklog_fsk_menu_save {
          label Save
          callback {fsklog_save();}
          xywh {0 0 36 21}
        }
        MenuItem fsklog_fsk_menu_save_as {
          label {Save As}
          callback {fsklog_save_as();}
          xywh {0 0 36 21} divider
        }
        MenuItem fsklog_fsk_menu_export_adif {
          label {Export ADIF}
          callback {fsklog_export_adif();}
          xywh {0 0 36 21}
        }
        MenuItem fsklog_fsk_menu_import_adif {
          label {Import ADIF}
          callback {fsklog_import_adif();}
          xywh {0 0 36 21}
        }
      }
      Submenu {} {
        label Config open
        xywh {0 0 70 21}
      } {
        MenuItem fsklog_fsk_menu_dupcheck {
          label {Dup check}
          callback {//fsklog.dupcheck = o->value();}
          xywh {0 0 36 21} type Toggle
        }
        MenuItem fsklog_fsk_menu_leading_zeros {
          label {Leading zeros}
          callback {//fsklog.dupcheck = o->value();}
          xywh {0 0 36 21} type Toggle
        }
        MenuItem fsklog_fsk_menu_cut_numbers {
          label {Cut numbers}
          callback {//fsklog.cut_nbrs = o->value();}
          xywh {0 0 36 21} type Toggle
        }
      }
    }
    Fl_Group {} {open
      xywh {2 22 668 29} box ENGRAVED_FRAME
    } {
      Fl_Output txt_fsklog_file {
        label {Log File:}
        callback {//progStatus.fsklogfile_name = o->value();}
        xywh {75 26 590 22}
        code0 {//->value(progStatus.fsklogfile_name);}
      }
    }
    Fl_Group fsk_grp_qso_data {open
      xywh {2 52 560 30} box ENGRAVED_BOX
    } {
      Fl_Input fsk_op_freq {
        label Freq
        tooltip Frequency xywh {43 56 120 22}
        class Fl_Input2
      }
      Fl_Button btn_fsklog_clear_qso {
        label Clear
        callback {fsklog_clear_qso();}
        tooltip {Clear fsklog entries} xywh {380 56 60 22}
      }
      Fl_Button btn_fsklog_save_qso {
        label Save
        callback {fsklog_save_qso();}
        tooltip {Save QSO data to fsklog file} xywh {440 56 60 22}
      }
      Fl_Button btn_fsklog_edit_entry {
        label Edit
        callback {fsklog_edit_entry();}
        tooltip {Delete Entry} xywh {501 56 60 22}
      }
      Fl_Button btn_fsklog_delete_entry {
        label Delete
        callback {fsklog_delete_entry();}
        tooltip {Delete Entry} xywh {492 56 60 22} hide
      }
      Fl_Input fsk_date {
        label Dt
        tooltip {QSO call
Query flfsklog if connected} xywh {193 56 85 22}
        class Fl_Input2
      }
      Fl_Input fsk_time {
        label {Tm:}
        xywh {313 56 55 22}
        class Fl_Input2
      }
    }
    Fl_Group {} {open
      xywh {565 52 103 62} box ENGRAVED_BOX
    } {
      Fl_Input fsk_rst_out {
        label RSTout
        tooltip {Send RST} xywh {622 56 40 22}
        class Fl_Input2
      }
      Fl_Input fsk_rst_in {
        label {RST in}
        tooltip {Send RST} xywh {624 87 40 22}
        class Fl_Input2
      }
    }
    Fl_Group {} {open
      xywh {2 84 560 30} box ENGRAVED_FRAME
    } {
      Fl_Input fsk_xchg_in {
        label Xch
        tooltip {Input exchange} xywh {313 87 150 22}
        class Fl_Input2
      }
      Fl_Counter cntr_fsk_log_nbr {
        label {\#:}
        callback {progStatus.fsk_log_nbr = o->value();}
        tooltip {QSO number (out)} xywh {491 87 70 22} type Simple align 4 step 1
        code0 {o->value(progStatus.fsk_log_nbr);}
      }
      Fl_Input fsk_op_name {
        label Nm
        xywh {193 88 85 22}
        class Fl_Input2
      }
      Fl_Input fsk_op_call {
        label Call
        tooltip {QSO call
Query flfsklog if connected} xywh {43 88 120 22}
        class Fl_Input2
      }
    }
    Fl_Group {} {open
      xywh {2 113 674 170}
    } {
      Fl_Group {} {open
        xywh {2 116 668 22}
      } {
        Fl_Button btn_fsk_datetime {
          label Date
          callback {fsklog_sort_by_datetime();}
          xywh {2 116 80 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_time {
          label Time
          callback {fsklog_sort_by_datetime();}
          xywh {81 116 45 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_freq {
          label Freq
          callback {fsklog_sort_by_freq();}
          xywh {126 116 70 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_call {
          label Call
          callback {fsklog_sort_by_call();}
          xywh {196 116 75 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_name {
          label Name
          xywh {271 116 75 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_in {
          label In
          xywh {346 116 40 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_out {
          label Out
          xywh {386 116 40 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_sent_nbr {
          label Nbr
          callback {fsklog_sort_by_nbr();}
          xywh {426 116 55 22} box BORDER_BOX color 51
        }
        Fl_Button btn_fsk_exchange {
          label Exchange
          xywh {481 116 185 22} box BORDER_BOX color 51 resizable
        }
      }
      Fl_Browser brwsr_fsklog_entries {
        callback {if (!fsklog_editing) fsklog_edit_entry();}
        xywh {2 140 666 141} type Hold selection_color 230 resizable
        code0 {static int widths[]={80,45,70,75,75,40,40,55,0};}
        code1 {o->column_widths(widths);}
        code2 {o->column_char('\\t');}
        code3 {o->has_scrollbar(Fl_Browser_::VERTICAL_ALWAYS);}
      }
    }
  }
}
